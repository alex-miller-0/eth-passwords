eth.accounts
primary = eth.accounts[0];
web3.fromWei(eth.getBalance(primary), "ether")
miner.start(8)
miner.stop()
web3.fromWei(eth.getBalance(primary), "ether")
MyContract = eth.contract(abi);
MyContract = eth.contract(primary, 'token', {from: primary, data:0x60606040526104b1806100136000396000f3006060604052361561007f576000357c0100000000000000000000000000000000000000000000000000000000900480630319d97314610081578063393e0306146100b457806349595ef4146100d35780639320b474146100f2578063bf10941014610129578063c1f9fdbb14610150578063d5433846146101715761007f565b005b61009e600480359060200180359060200180359060200150610435565b6040518082815260200191505060405180910390f35b6100d1600480359060200180359060200180359060200150610282565b005b6100f0600480359060200180359060200180359060200150610373565b005b6100fd600450610253565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a60048035906020015061022f565b6040518082815260200191505060405180910390f35b61015b600450610279565b6040518082815260200191505060405180910390f35b6101c16004803590602001906004018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509050610490565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60026000508181548110156100025790600052602060002090016000915090505481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016000505481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156102e3575060016000505481145b1561036d57816002600050600260005080548091906001019090815481835581811511610342578183600052602060002091820191016103419190610323565b8082111561033d5760008181506000905550600101610323565b5090565b5b50505081548110156100025790600052602060002090016000508190555061036b838284610435565b505b5b505050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156103d6575060016000505482145b1561042e57600090505b60026000505481101561042d5782600260005082815481101561000257906000526020600020900160005054141561041f5761041d848385610435565b505b5b80806001019150506103e0565b5b5b50505050565b6000838383604051808473ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401838152602001828152602001935050505060405180910390209050610489565b9392505050565b60206040519081016040528060008152602001508190506104ac565b91905056});
web3.fromWei(eth.getBalance(primary), "ether")
MyContract.get_password()
MyContract.abi
var info = admin.getContractInfo(MyContract.abi);
var info = admin.getContractInfo(MyContract);
var info = admin.getContractInfo(MyContract.at);
var info = admin.getContractInfo(MyContract.new);
var info = admin.getContractInfo(MyContract.abi);
miner.start()
miner.stop()
var info = admin.getContractInfo(MyContract.abi);
MyContract
myMyContract = MyContract.at(MyContract.abi);
var greeterSource = 'contract mortal { address owner; function mortal() { owner = msg.sender; } function kill() { if (msg.sender == owner) suicide(owner); } } contract greeter is mortal { string greeting; function greeter(string _greeting) public { greeting = _greeting; } function greet() constant returns (string) { return greeting; } }'
var greeterCompiled = web3.eth.compile.solidity(greeterSource)
greeterCompiled
var _greeting = "Hello";
var greeterContract = web3.eth.contract(greeterCompiled.greeter.info.abiDefinition);
var greeter = greeterContract.new(_greeting,{from:web3.eth.accounts[0], data: greeterCompiled.greeter.code, gas: 1000000})
greeter.greet();
greeter
miner.mine()
miner.start()
greeter
miner.stop()
greeter.greet()
greeter.gas()
greeter.gas
greeter.greet();
eth.accounts;
personal.unlockAccount(eth.accounts[0], "password);
personal.unlockAccount(eth.accounts[0], "password");
web3.fromWei(eth.getBalance(primary), "ether");
web3.fromWei(eth.getBalance(eth.accounts[0]), "ether");
